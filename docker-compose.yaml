version: '3.8'

x-common:
  &common-env
  environment:
    POSTGRES_DB: ${POSTGRES_DB}
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    API_TOKEN: ${API_TOKEN}
    API_URL: ${API_URL}

services:

  rdbms:
    container_name: rdbms
    image: postgres:16.2-alpine
    restart: on-failure
    ports:
      - '9876:5432'
    <<: *common-env
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 30s
      retries: 10

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.4
    <<: *common-env
    environment:
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_DEFAULT_EMAIL: "foundernest@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "foundernest"
      PGADMIN_DEFAULT_SERVER: rdbms
      POSTGRES_PORT: 5432
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./pgadmin4:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - rdbms

  ingestion:
    container_name: python_runtime
    build:
      context: ./
      dockerfile: python.Dockerfile
    <<: *common-env
    volumes:
      - ./scripts:/app
    command: >
      "sleep 5 && python main.py"
    depends_on:
      - rdbms
    tty: true

  dbt:
    container_name: dbt
    profiles:
      - transform
    build:
      context: ./
      dockerfile: dbt.Dockerfile
    volumes:
      - ./dbt:/dbt
      - ./dbt/.dbt:/root/.dbt
    depends_on:
      - rdbms
      - ingestion
    <<: *common-env
    working_dir: /dbt/user_events
    command: run
    tty: true